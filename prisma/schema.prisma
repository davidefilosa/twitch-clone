// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]

}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
  relationMode = "prisma"

}


model User {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  username String @unique
  imageUrl String @db.String
  externalUserId String @unique
  bio String? @db.String

  stream Stream?

  following Follow[] @relation("Following")
  followedBy Follow[] @relation("FollowedBy")


  blocking Block[] @relation("Blocking")
  blockedBy Block[] @relation("BlockedBy")

  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

}

model Stream {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String @db.String
  thumbnailUrl String? @db.String

  ingressId String? @unique
  serverUrl String? @db.String
  streamKey String? @db.String

  isLive Boolean @default(false)
  isChatEnabled Boolean @default(true)
  isChatDelayed Boolean @default(false)
  isChatFollowersOnly Boolean @default(false)

  userId String @db.ObjectId @unique
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt


  @@fulltext([name])
}



model Follow {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  followerId String @db.ObjectId @unique
  followingId String @db.ObjectId @unique

  follower User @relation("Following", fields: [followerId], references: [id], onDelete:Cascade)
  following User @relation("FollowedBy",fields: [followingId], references: [id], onDelete:Cascade )

  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

}


model Block {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  blockerId String @db.ObjectId @unique
  blockedId String @db.ObjectId @unique

  blocker User @relation("Blocking", fields: [blockerId], references: [id], onDelete:Cascade)
  blocked User @relation("BlockedBy",fields: [blockedId], references: [id], onDelete:Cascade )

  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

}
